name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-windows:
    runs-on: windows-latest
    if: ${{ !contains(github.ref, 'pre') }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Install CMake and Ninja
        uses: lukka/get-cmake@latest
      - name: Configure the project
        uses: threeal/cmake-action@v1.3.0
        with:
          run-build: true
          build-dir: NIAHttpBOT
      - name: Upload the exe file
        uses: actions/upload-artifact@v4
        with:
          name: NIAHttpBOT.exe
          path: ./NIAhttpBOT/Debug/NIAHttpBOT.exe

  build-linux:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.ref, 'pre') }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Install CMake and Ninja
        uses: lukka/get-cmake@latest
      - name: Configure the project
        uses: threeal/cmake-action@v1.3.0
        with:
          run-build: true
          build-dir: NIAHttpBOT
      - name: Upload the executable file
        uses: actions/upload-artifact@v4
        with:
          name: NIAHttpBOT
          path: ./NIAHttpBOT/NIAHttpBOT


  release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Download the exe file
        uses: actions/download-artifact@v4
        with:
          name: NIAHttpBOT.exe
      - name: Remove existing directory
        run: rm -rf ./NIAHttpBOT
      - name: Download the Linux executable file
        uses: actions/download-artifact@v4
        with:
          name: NIAHttpBOT
      - name: Create and upload release
        uses: ncipollo/release-action@v1.12.0
        with:
          prerelease: true
          artifacts: "NIAHttpBOT.exe,NIAHttpBOT"
          bodyFile: "CHANGELOG.md"
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}